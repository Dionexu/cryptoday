import socket
import sys

def prevent_multiple_instances():
    """–ì–∞—Ä–∞–Ω—Ç—É—î, —â–æ –±–æ—Ç –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è –¥–≤—ñ—á—ñ –æ–¥–Ω–æ—á–∞—Å–Ω–æ (–Ω–∞–≤—ñ—Ç—å —è–∫—â–æ Render –Ω–∞–º–∞–≥–∞—î—Ç—å—Å—è)."""
    lock_socket = socket.socket(socket.AF_UNIX, socket.SOCK_DGRAM)
    try:
        lock_id = "aiogram-telegram-bot-lock"
        lock_socket.bind("\0" + lock_id)
    except OSError:
        print("‚ùå –Ü–Ω—à–∞ —ñ–Ω—Å—Ç–∞–Ω—Ü—ñ—è –≤–∂–µ –∑–∞–ø—É—â–µ–Ω–∞. –í–∏—Ö—ñ–¥.")
        sys.exit(1)
import os
import asyncio
from datetime import datetime, timezone
from aiogram import Bot, Dispatcher

BOT_TOKEN = os.getenv("BOT_TOKEN")
if not BOT_TOKEN:
    print("‚ùå BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ")
    exit(1)

bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

async def main():
    print(f"[{datetime.now(timezone.utc).isoformat()}] ü§ñ –°—Ç–∞—Ä—Ç—É—î –±–æ—Ç...")

    await bot.delete_webhook(drop_pending_updates=True)
    print(f"[{datetime.now(timezone.utc).isoformat()}] üßπ –í–µ–±—Ö—É–∫ –≤–∏–¥–∞–ª–µ–Ω–æ")

    try:
        print(f"[{datetime.now(timezone.utc).isoformat()}] ‚è≥ –°—Ç–∞—Ä—Ç polling...")
        await dp.start_polling(bot, skip_updates=True)
    except Exception as e:
        print(f"[{datetime.now(timezone.utc).isoformat()}] ‚ùå –ü–æ–º–∏–ª–∫–∞ polling: {e}")
    finally:
        print(f"[{datetime.now(timezone.utc).isoformat()}] üõë polling –∑–∞–≤–µ—Ä—à–∏–≤—Å—è")

if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("üõë –ó—É–ø–∏–Ω–µ–Ω–æ –≤—Ä—É—á–Ω—É")
    except Exception as e:
        print(f"‚ùóÔ∏è –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞: {e}")
