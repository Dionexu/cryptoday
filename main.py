import os
import json
import aiohttp
import asyncio
from datetime import datetime, timezone, timedelta, time
import pytz

from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton, ReplyKeyboardRemove
from aiogram.filters import Command
from aiogram.utils.markdown import hcode

print(f"[{datetime.now(timezone.utc).isoformat()}] –°–∫—Ä–∏–ø—Ç main.py –ø–æ—á–∞–≤ –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏—Å—è.")

# --- –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø ---
BOT_TOKEN = os.getenv("BOT_TOKEN")
PLACEHOLDER_TOKEN = "–í–ê–®_–ë–û–¢_–¢–û–ö–ï–ù_–¢–£–¢_–ó–ê–ú–ï–ù–ò–¢–ï_–ò–õ–ò_–£–°–¢–ê–ù–û–í–ò–¢–ï_–ü–ï–†–ï–ú–ï–ù–ù–£–Æ"

if not BOT_TOKEN or BOT_TOKEN == PLACEHOLDER_TOKEN:
    print(f"[{datetime.now(timezone.utc).isoformat()}] ‚ùå –ö–†–ò–¢–ò–ß–ù–û: BOT_TOKEN –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ –∞–±–æ —î –ø–ª–µ–π—Å—Ö–æ–ª–¥–µ—Ä–æ–º.")
    exit(1)

# --- –Ü–ù–Ü–¶–Ü–ê–õ–Ü–ó–ê–¶–Ü–Ø –ë–û–¢–ê –¢–ê –î–ò–°–ü–ï–¢–ß–ï–†–ê ---
try:
    bot = Bot(token=BOT_TOKEN)
    print(f"[{datetime.now(timezone.utc).isoformat()}] ‚úÖ –û–±'—î–∫—Ç Bot —Å—Ç–≤–æ—Ä–µ–Ω–æ.")
except Exception as e:
    print(f"[{datetime.now(timezone.utc).isoformat()}] ‚ùå –ü–û–ú–ò–õ–ö–ê: –ù–µ –≤–¥–∞–ª–æ—Å—è —Å—Ç–≤–æ—Ä–∏—Ç–∏ Bot: {e}")
    exit(1)

dp = Dispatcher()
print(f"[{datetime.now(timezone.utc).isoformat()}] ‚úÖ –û–±'—î–∫—Ç Dispatcher —Å—Ç–≤–æ—Ä–µ–Ω–æ.")

# --- –ì–û–õ–û–í–ù–ê –§–£–ù–ö–¶–Ü–Ø ---
async def main():
    print(f"[{datetime.now(timezone.utc).isoformat()}] ‚ñ∂Ô∏è main: –ü–æ—á–∞—Ç–æ–∫ —Ñ—É–Ω–∫—Ü—ñ—ó main.")

    # –í–ê–ñ–õ–ò–í–û: –ó–Ω—è—Ç–∏ –≤–µ–±—Ö—É–∫ ‚Äî –≤–∏—Ä—ñ—à—É—î –ø–æ–º–∏–ª–∫—É "Conflict"
    try:
        await bot.delete_webhook(drop_pending_updates=True)
        print(f"[{datetime.now(timezone.utc).isoformat()}] üîß –í–µ–±—Ö—É–∫ —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ.")
    except Exception as e:
        print(f"[{datetime.now(timezone.utc).isoformat()}] ‚ö†Ô∏è –ü–û–ü–ï–†–ï–î–ñ–ï–ù–ù–Ø: –ù–µ –≤–¥–∞–ª–æ—Å—è –≤–∏–¥–∞–ª–∏—Ç–∏ –≤–µ–±—Ö—É–∫: {e}")

    # –¢—É—Ç –º–æ–∂–Ω–∞ —Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏ —Ö–µ–Ω–¥–ª–µ—Ä–∏, —è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ
    print(f"[{datetime.now(timezone.utc).isoformat()}] üß© main: –•–ï–ù–î–õ–ï–†–ò –ó–ê–†–ï–Ñ–°–¢–†–û–í–ê–ù–Ü.")

    # –ó–∞–ø—É—Å–∫ polling
    print(f"[{datetime.now(timezone.utc).isoformat()}] üöÄ –ó–∞–ø—É—Å–∫ polling...")
    try:
        await dp.start_polling(bot, skip_updates=True)
    except Exception as e:
        print(f"[{datetime.now(timezone.utc).isoformat()}] ‚ùå –ü–û–ú–ò–õ–ö–ê –≤ start_polling: {e}")
        raise

# --- –ó–ê–ü–£–°–ö ---
if __name__ == "__main__":
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print(f"[{datetime.now(timezone.utc).isoformat()}] üõë –ó—É–ø–∏–Ω–∫–∞ –≤—Ä—É—á–Ω—É (Ctrl+C)")
    except Exception as e:
        print(f"[{datetime.now(timezone.utc).isoformat()}] ‚ùóÔ∏è –ö—Ä–∏—Ç–∏—á–Ω–∞ –ø–æ–º–∏–ª–∫–∞ –ø—ñ–¥ —á–∞—Å –∑–∞–ø—É—Å–∫—É: {e}")
